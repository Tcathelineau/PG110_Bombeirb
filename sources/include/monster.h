#ifndef MONSTER_H_
#define MONSTER_H_


#include <structures.h>

// Create an empty list of monters
void monsters_init(struct game* game);

// Return the nomber of monters inside monters list
int monster_get_size(struct monster* monsters);

// Return a struct monster according to given parameters
struct monster* monster_create(struct game* game, int x, int y, short map_level);

// Add a monster to monsters list
struct monster* monsters_add_monster(struct game* game, int x, int y, short map_level);

// Motion decision based on the type of the next box
int monster_move_aux(struct game* game,  int x, int y, struct map* map);

// Motion prohibited if next box is a door
int monster_move_aux_door(struct game* game,  int x, int y, struct map* map);

// Generate randomly a direction
enum direction monster_move_direction();

// Move the monster according to the direction generated by monster_move_direction
void monster_move(struct game* game, struct monster* monsters);

// Remove monster from monsters list
struct monster *monsters_delete_monster(struct game* game,struct monster *monster);

// Display monter according to his position, decrease the number of life of the player if necessary and call movement function
void monsters_display(struct monster* monsters, struct game* game);

#endif /* MONSTER */
